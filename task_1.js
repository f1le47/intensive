console.log('1'); // Выполняется первым, так как синхронный код (1)

setTimeout(() => console.log('2'), 1); // Выполнится последним, так как WEBAPI подождет 1мс, прежде чем отправит колбэк дальше в макротаски.

let promiseNew = new Promise((resolve) => {
  console.log('3'); // Выполнится вторым, так как тело функции промиса само по себе синхронно (2)
  resolve(); // За'resolv'ится и вызовет then
});

promiseNew.then(() => console.log('4')); // Выполнится четвертым, так как promiseNew после resolve() вызовет then, который
                                         // передаст колбэк в микротаски и после того, как синхронный код выполнится, очередь переходит к микротаскам (4)

setTimeout(() => console.log('5')); // Выполнится пятым, так как этот таймаут не имеет задержки, то есть WEBAPI быстрее отправит колбэк в очередь макротасок (5)

console.log('6'); // Выполнится третьим, потому что все остальное пока что находится в макро и микро тасках (3)

// То есть, порядок будет такой: 1 3 6 4 5 2